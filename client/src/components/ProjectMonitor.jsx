/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Payam Tavakoli (https://sketchfab.com/payamtavakoli)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/sci-fi-monitor-37a0fbbf74cd41bdb91c37156954d7c1
Title: Sci fi Monitor
*/

// import React, { useRef } from "react";
import { useGSAP } from "@gsap/react";
import { useGLTF, useVideoTexture } from "@react-three/drei";
import gsap from "gsap";
import PropTypes from "prop-types";
import { useEffect, useRef } from "react";

function ProjectMonitor(props) {
  const { nodes, materials } = useGLTF("/models/Projects-monitor-c.glb");
  const texture = useVideoTexture(props.texture || "/textures/project/Iphone 15 pro.mp4");
  const group = useRef();
  useGSAP(() => {
    gsap.from(group.current.rotation, {
      duration: 1,
      z: Math.PI / 2,
      ease: "power3.out",
    });
  }, [texture]);
  useEffect(() => {
    if (texture) {
      texture.flipY = props.flipY; // Flip the video vertically
    }
  }, [texture, props.flipY]);
  return (
    <group {...props} dispose={null} ref={group}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_4.geometry}
          material={materials["Material.005"]}
          rotation={[Math.PI / 2, 0, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_5.geometry}
          material={materials["Material.010"]}
          rotation={[Math.PI / 2, 0, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_6.geometry}
          material={materials["Material.012"]}
          rotation={[Math.PI / 2, 0, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_7.geometry}
          material={materials.None}
          rotation={[Math.PI / 2, 0, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_8.geometry}
          material={materials["Material.011"]}
          rotation={[Math.PI / 2, 0, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_14.geometry}
          material={materials["Material.016"]}
          rotation={[Math.PI / 2, 0, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_16.geometry}
          material={materials["Material.002"]}
          rotation={[Math.PI / 2, 0, 0]}>
          <meshBasicMaterial map={texture} />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/models/Projects-monitor-c.glb");
ProjectMonitor.propTypes = {
  texture: PropTypes.string,
  flipY: PropTypes.bool,
};
export default ProjectMonitor;
